//animations
function BattleView() {}

BattleView.prototype = {
  updateView: function( data ) {
    this.battleData = data;

    var instance = this;

    if ( data.targetIsSelf ) {
      var $attackingPokemon = $( '#their-pokemon-avatar' );
      var $targetPokemon = $( '#my-pokemon-avatar' );
    } else {
      var $attackingPokemon = $( '#my-pokemon-avatar' );
      var $targetPokemon = $( '#their-pokemon-avatar' );
    }

    // Plays the appropriate sound for the appropriate attack type
    this.playSound( data.attackType );

    // Update the health bar
    this.updateHealthBar();

    // Animate the pokemon for the appropriate attack type
    this.animateAttack.call( $attackingPokemon, data.attackType );
    this.animateAttack.call( $targetPokemon, 'receive-damage' );

    // After the attack animation has finished...
    // If pokemon has fainted, do faint stuff
    if ( data.health === 0 ) {
      $targetPokemon.one( 'webkitAnimationEnd mozAnimationEnd', function() {
        instance.pokemonFaints();
      });
    }
  },
  pokemonFaints: function() {
    var prefix = this.battleData.targetIsSelf ? 'my-pokemon' : 'their-pokemon';

    var $pokemon = $( '#' + prefix + '-avatar' );
    var faintAnimation = prefix + '-faint';

    $pokemon.addClass( faintAnimation );
    this.playSound( 'faint' );
  },
  updateHealthBar: function(){
    var updateTarget = this.battleData.targetIsSelf ? '.my-healthbar' : '.their-healthbar';
    $( updateTarget ).val( this.battleData.health / this.battleData.maxHealth * 100 );
  },
  animateAttack: function( animationType ) {
    // Add animation class to Pokemon
    var $pokemon = $( this );
    $pokemon.addClass( animationType );

    // After animation is over, reset the pokemon's state
    $pokemon.one('webkitAnimationEnd mozAnimationEnd', function() {
      $( this ).removeClass( animationType );
    });
  },
  playSound: function( id ) {
    // Finds the appropriate audio tag and plays it
    document.getElementById( 'audio-' + id ).play();
  }
};
